from fastapi import Request
from starlette.middleware.base import BaseHTTPMiddleware

from src.core.request.request_stack import RequestStack


class RequestMiddleware(BaseHTTPMiddleware):
    """
    RequestMiddleware is a custom middleware that sets the current request in the RequestStack
    before passing it to the next middleware or route handler.

    Methods:
        dispatch(request: Request, call_next):
            Asynchronously sets the current request in the RequestStack and then
            calls the next middleware or route handler in the chain.

    Args:
        request (Request): The incoming HTTP request.
        call_next (Callable): The next middleware or route handler to be called.

    Returns:
        Response: The HTTP response generated by the next middleware or route handler.
    """

    async def dispatch(self, request: Request, call_next):
        RequestStack.set_request(request)
        response = await call_next(request)
        return response
