name: Tests

# on:
#   push:
#     branches:
#         - main
#   pull_request:
#     branches:
#         - main

on:
  workflow_dispatch:  # Manual trigger
        
jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install uv
        uv pip install -e .
        uv pip install pytest pytest-cov pytest-asyncio
    
    - name: Run unit tests
      run: |
        source venv/bin/activate
        pytest framefox/tests/unit/ \
          --cov=framefox \
          --cov-report=xml \
          --cov-report=term-missing \
          --verbose \
          --tb=short
    
    - name: Run e2e tests
      run: |
        source venv/bin/activate
        pytest framefox/tests/e2e/ \
          --verbose \
          --tb=short
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

#   code-quality:
#     runs-on: ubuntu-latest
    
#     steps:
#     - uses: actions/checkout@v4
    
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: "3.12"
    
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install black isort flake8
    
#     - name: Check code formatting with Black
#       run: |
#         black --check --line-length 140 framefox/
    
#     - name: Check import sorting with isort
#       run: |
#         isort --check-only framefox/
    
#     - name: Lint with flake8
#       run: |
#         flake8 framefox/ --max-line-length=140 --exclude=__pycache__,migrations