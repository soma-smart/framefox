[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "framefox"
version = "1.0.32"
description = "Framework de développement modulaire"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "BOUMAZA Rayen", email = "boumaza.rayen@outlook.fr"},
    {name = "LEUROND Raphaël", email = "leurond.raphael@gmail.com"}
]

dependencies = [
    "sqlmodel>=0.0.22",
    "typer>=0.15.1",
    "fastapi>=0.115.7,<1.0.0",
    "uvicorn>=0.34.0",
    "starlette>=0.45.3",
    "python-multipart>=0.0.20",
    "httpx>=0.28.1",
    "ruamel.yaml>=0.18.10",
    "python-dotenv>=1.0.1",
    "pyYAML>=6.0.2",
    "colorlog>=6.9.0",
    "jinja2>=3.1.4",
    "rich>=13.9.4",
    "pydantic-settings>=2.7.1",
    "click>=8.1.8",
    "passlib>=1.7.4",
    "pyjwt>=2.10.1",
    "bcrypt>=4.0.1",
    "pymysql>=1.1.1",
    "psycopg2-binary>=2.9.10",
    "alembic>=1.14.1",
    "pytest>=8.3.4",
    "cryptography>=44.0.2",
    "aiosmtplib>=4.0.0",
    "pika>=1.3.2",
    "psutil>=7.0.0",
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
]

[project.scripts]
framefox = "framefox.cli:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["framefox*"]

[tool.setuptools.package-data]
framefox = [
    "core/**/*",
    "terminal/**/*",
    "terminal/ui/*",
    "terminal/utils/*",
    "terminal/typer-config/*",
    "terminal/templates/**/*",
    "terminal/commands/**/*",
    "terminal/common/**/*",
]
"*" = ["src/**/*"]

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["framefox/tests"]
python_files = ["test_*.py"]
filterwarnings = [
    "ignore::sqlalchemy.exc.SAWarning",
    "ignore::DeprecationWarning",
    "ignore::pytest.PytestCollectionWarning"
]
markers = [
    "asyncio: mark test as async"
]